import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { MatIconModule } from '@angular/material/icon';
import { MatButtonModule } from '@angular/material/button';
import { OverlayModule } from '@angular/cdk/overlay';
import { MatTooltipModule } from '@angular/material/tooltip';
import { ScrollbarHelper } from './services/scrollbar-helper.service';
import { DimensionsHelper } from './services/dimensions-helper.service';
import { ColumnChangesService } from './services/column-changes.service';
import { DataTableFooterTemplateDirective } from './components/footer/footer-template.directive';
import { VisibilityDirective } from './directives/visibility.directive';
import { DraggableDirective } from './directives/draggable.directive';
import { ResizeableDirective } from './directives/resizeable.directive';
import { OrderableDirective } from './directives/orderable.directive';
import { LongPressDirective } from './directives/long-press.directive';
import { ScrollerComponent } from './components/body/scroller.component';
import { MatFormFieldModule } from '@angular/material/form-field';
import { DataTableColumnDirective } from './components/columns/column.directive';
import { DataTableHeaderComponent } from './components/header/header.component';
import { DataTableHeaderCellComponent } from './components/header/header-cell.component';
import { DataTableBodyComponent } from './components/body/body.component';
import { DataTableFooterComponent } from './components/footer/footer.component';
import { DataTablePagerComponent } from './components/footer/pager.component';
import { ProgressBarComponent } from './components/body/progress-bar.component';
import { DataTableBodyRowComponent } from './components/body/body-row.component';
import { DataTableRowWrapperComponent } from './components/body/body-row-wrapper.component';
import { DatatableRowDetailDirective } from './components/row-detail/row-detail.directive';
import { DatatableGroupHeaderDirective } from './components/body/body-group-header.directive';
import { DatatableRowDetailTemplateDirective } from './components/row-detail/row-detail-template.directive';
import { DataTableBodyCellComponent } from './components/body/body-cell.component';
import { DataTableSelectionComponent } from './components/body/selection.component';
import { DataTableColumnHeaderDirective } from './components/columns/column-header.directive';
import { DataTableColumnCellDirective } from './components/columns/column-cell.directive';
import { DataTableColumnCellTreeToggle } from './components/columns/tree.directive';
import { DatatableFooterDirective } from './components/footer/footer.directive';
import { DatatableGroupHeaderTemplateDirective } from './components/body/body-group-header-template.directive';
import { DataTableSummaryRowComponent } from './components/body/summary/summary-row.component';
import { ToolTipRendererDirective } from './directives/ice-custom-html-tooltip.directive';
import { CustomToolTipComponent } from './components/ice-custom-tooltip/ice-custom-tooltip.component';
import { DatatableSelectComponent } from './components/ice-datatable-select/ice-datatable-select.component';
import { EditableTextComponent } from './components/ice-editable-text/ice-editable-text.component';
import { FormsModule, ReactiveFormsModule } from '@angular/forms';
import { MatInputModule } from '@angular/material/input';
import { DatatableComponent } from './components/datatable.component';
import { MatSelectModule } from '@angular/material/select';
import { ToolbarService } from './services/toolbar-service';
export class NgxDatatableModule {
  /**
   * Configure global configuration via INgxDatatableConfig
   * @param configuration
   */
  static forRoot(configuration) {
    return {
      ngModule: NgxDatatableModule,
      providers: [{ provide: 'configuration', useValue: configuration }]
    };
  }
}
NgxDatatableModule.decorators = [
  {
    type: NgModule,
    args: [
      {
        imports: [
          CommonModule,
          MatTooltipModule,
          OverlayModule,
          MatIconModule,
          MatButtonModule,
          MatInputModule,
          MatFormFieldModule,
          MatSelectModule,
          FormsModule,
          ReactiveFormsModule
        ],
        providers: [ScrollbarHelper, DimensionsHelper, ColumnChangesService, ToolbarService],
        declarations: [
          DataTableFooterTemplateDirective,
          VisibilityDirective,
          DraggableDirective,
          ResizeableDirective,
          OrderableDirective,
          LongPressDirective,
          ToolTipRendererDirective,
          ScrollerComponent,
          DatatableComponent,
          DataTableColumnDirective,
          DataTableHeaderComponent,
          DataTableHeaderCellComponent,
          DataTableBodyComponent,
          DataTableFooterComponent,
          DataTablePagerComponent,
          ProgressBarComponent,
          DataTableBodyRowComponent,
          DataTableRowWrapperComponent,
          CustomToolTipComponent,
          DatatableSelectComponent,
          EditableTextComponent,
          DatatableRowDetailDirective,
          DatatableGroupHeaderDirective,
          DatatableRowDetailTemplateDirective,
          DataTableBodyCellComponent,
          DataTableSelectionComponent,
          DataTableColumnHeaderDirective,
          DataTableColumnCellDirective,
          DataTableColumnCellTreeToggle,
          DatatableFooterDirective,
          DatatableGroupHeaderTemplateDirective,
          DataTableSummaryRowComponent
        ],
        exports: [
          DatatableComponent,
          DatatableRowDetailDirective,
          DatatableGroupHeaderDirective,
          DatatableRowDetailTemplateDirective,
          DataTableColumnDirective,
          DataTableColumnHeaderDirective,
          DataTableColumnCellDirective,
          DataTableColumnCellTreeToggle,
          DataTableFooterTemplateDirective,
          DatatableFooterDirective,
          DataTablePagerComponent,
          DatatableGroupHeaderTemplateDirective
        ],
        entryComponents: [CustomToolTipComponent]
      }
    ]
  }
];
//# sourceMappingURL=data:application/json;base64,
